{"ts":1377629871720,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1377629884461,"patch":[[{"diffs":[[1,"require 'nokogiri'\nrequire 'open-uri'\nrequire 'json'\n\nclass BussItineraryScraper\n     \n    def initialize(line = '031')    \n        @base_url = \"http://www.cuiaba.mt.gov.br\"\n        @doc = Nokogiri::HTML(open(\"#{@base_url}/itinerario?linha=#{line}\"))\n        @doc.css('br').each{ |br| br.replace(\"\\n\") }\n        #@doc.xpath('//*[@id=\"volta\"]/div[2]').remove\n    end\n    \n    def crawl\n        idas = []\n        voltas = []\n        return { ida: [], volta: [] }  if(@doc.at('#ida') == nil || @doc.at('#volta') == nil)   \n        \n        idas = parseItinerary('#ida')\n        voltas = parseItinerary('#volta')\n        resposta = { ida: idas, volta: voltas}\n        #puts resposta\n        resposta\n   end\n   \n   def parseItinerary(id)\n     paths = []\n     content = @doc.at(id).content\n     content = content.gsub(/\\r/,'')\n     content.split(/\\n/).each do |path|\n       next if path.upcase == path\n       path = path.gsub(/(EM OPERA.*)/,'')  \n       path = path.gsub(/(Obs\\..*)/,'')  \n       path = path.gsub(/(OBSERVA.*)/,'')  \n       path = path.gsub(/(desde.*)/,'')  \n       path = path.gsub(/(a partir.*)/,'')  \n       path = path.gsub(/\\A\\(|\\)\\Z/,'') if path.start_with?('(')\n       path = path.strip\n       paths.push path if !path.empty?\n     end\n     paths          \n   end\nend\n\nonibus = BussScraper.new.crawl\n\nfor buss in onibus do\n    puts \"Getting itineray for line #{buss[:linha]}\"    \n    scraper = BussItineraryScraper.new(buss[:linha])\n    buss[:itinerario] = scraper.crawl\nend\n\nFile.open(\"temp.json\",\"w\") do |f|\n  f.write(onibus.to_json)\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":1556}]],"length":1556,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377631303697,"patch":[[{"diffs":[[0,"\n\nclass "],[-1,"BussItinerary"],[1,"PointsOfCharge"],[0,"Scraper\n"]],"start1":52,"start2":52,"length1":29,"length2":30},{"diffs":[[0,"ize("],[-1,"line = '031'"],[0,")   "]],"start1":103,"start2":103,"length1":20,"length2":8},{"diffs":[[0,"        "],[-1,"@"],[0,"base_url"]],"start1":113,"start2":113,"length1":17,"length2":16},{"diffs":[[0,"www."],[-1,"cuiaba.mt.gov.br"],[1,"amtu.com.br/Cartao/0,0,0,0,0,10/Pontos_de_Recarga.html"],[0,"\"\n  "]],"start1":140,"start2":140,"length1":24,"length2":62},{"diffs":[[0,"pen("],[-1,"\"#{@"],[0,"base_url"],[-1,"}/itinerario?linha=#{line}\"))\n        @doc.css('br').each{ |br| br.replace(\"\\n\") }\n        #@doc.xpath('//*[@id=\"volta\"]/div[2]').remove\n    end\n    \n    def crawl\n        idas = []\n        voltas = []\n        return { ida: [], volta: [] }  if(@doc.at('#ida') == nil || @doc.at('#volta') == nil)   \n        \n        idas = parseItinerary('#ida')\n        voltas = parseItinerary('#volta')\n        resposta = { ida: idas, volta: voltas}\n        #puts resposta\n        resposta\n   end\n   \n   def parseItinerary(id)\n     paths = []\n     content = @doc.at(id).content\n     content = content.gsub(/\\r/,'')\n     content.split(/\\n/"],[1,"))\n    end\n    \n    def crawl\n        points = []\n        reg = Regexp.new(/javascript: PopUp(?<link>.*)/)\n        @doc.css('a'"],[0,").ea"]],"start1":231,"start2":231,"length1":643,"length2":143},{"diffs":[[0,"ach do |"],[-1,"path"],[1,"a"],[0,"|\n      "]],"start1":373,"start2":373,"length1":20,"length2":17},{"diffs":[[0,"    "],[-1,"next if path.upcase == path\n       path = path.gsub(/(EM OPERA.*)/,'')  \n       path = path.gsub(/(Obs\\..*)/,'')  \n       path = path.gsub(/(OBSERVA.*)/,'')  \n       path = path.gsub(/(desde.*)/,'')  \n       path = path.gsub(/(a partir.*)/,'')  \n       path = path.gsub(/\\A\\(|\\)\\Z/,'') if path.start_with?('(')\n       path = path.strip\n       paths.push path if !path.empty?\n     end\n     paths          \n   end\nend\n\nonibus = BussScraper.new.crawl\n\nfor buss in onibus do\n    puts \"Getting itineray for line #{buss[:linha]}\"    \n    scraper = BussItineraryScraper.new(buss[:linha])\n    buss[:itinerario] = scraper.crawl\nend\n\nFile.open(\"temp.json\",\"w\") do |f|\n  f.write(onibus.to_json)"],[1,"     puts a['href'].gsub(reg,'\\k<link>')\n        end\n        points\n   end\n   \nend\n\npoints = PointsOfChargeScraper.new.crawl\n\nfor point in points do\n    puts point "],[0,"\nend"]],"start1":387,"start2":387,"length1":691,"length2":172}]],"length":560,"saved":false}
{"ts":1377631326671,"patch":[[{"diffs":[[0,"t: PopUp"],[1,"\\("],[0,"(?<link>"]],"start1":328,"start2":328,"length1":16,"length2":18}]],"length":562,"saved":false}
{"ts":1377631342361,"patch":[[{"diffs":[[0," PopUp\\("],[1,"\\'"],[0,"(?<link>"]],"start1":330,"start2":330,"length1":16,"length2":18}]],"length":564,"saved":false}
{"ts":1377631356486,"patch":[[{"diffs":[[0,"link>.*)"],[1,"\\'.*"],[0,"/)\n     "]],"start1":343,"start2":343,"length1":16,"length2":20}]],"length":568,"saved":false}
{"ts":1377631388182,"patch":[[{"diffs":[[0,"<link>.*"],[1,"\\'$"],[0,")\\'.*/)\n"]],"start1":342,"start2":342,"length1":16,"length2":19}]],"length":571,"saved":false}
{"ts":1377631411803,"patch":[[{"diffs":[[0,"k>.*"],[-1,"\\'$"],[0,")\\'"],[-1,".*"],[1,"$"],[0,"/)\n "]],"start1":346,"start2":346,"length1":16,"length2":12}]],"length":567,"saved":false}
{"ts":1377631425872,"patch":[[{"diffs":[[0,">.*)"],[-1,"\\'$"],[0,"/)\n "]],"start1":347,"start2":347,"length1":11,"length2":8}]],"length":564,"saved":false}
{"ts":1377631460825,"patch":[[{"diffs":[[0,"<link>')"],[1," if reg.match(a['href'])"],[0,"\n       "]],"start1":427,"start2":427,"length1":16,"length2":40}]],"length":588,"saved":false}
{"ts":1377631528617,"patch":[[{"diffs":[[0,"link>.*)"],[1,"\\',\\'400\\',\\'400\\'\\)"],[0,"/)\n     "]],"start1":343,"start2":343,"length1":16,"length2":36}]],"length":608,"saved":false}
{"ts":1377631558945,"patch":[[{"diffs":[[0,"k>.*"],[-1,")"],[0,"\\'"],[-1,",\\'400\\',\\'400\\'\\"],[1,"$"],[0,")/)\n"]],"start1":346,"start2":346,"length1":28,"length2":11}]],"length":591,"saved":false}
{"ts":1377631600978,"patch":[[{"diffs":[[0,"k>.*"],[-1,"\\'$"],[0,")/)\n"]],"start1":346,"start2":346,"length1":11,"length2":8}]],"length":588,"saved":false}
{"ts":1377631661892,"patch":[[{"diffs":[[0,"    "],[-1,"puts a['href'].gsub(reg,'\\k<link>') if reg.match(a['href'])"],[1,"if reg.match(a['href']) then\n                link = a['href'].gsub(reg,'\\k<link>')\n                link = link.split('\\'')[0]\n                puts link\n            end"],[0,"\n   "]],"start1":396,"start2":396,"length1":67,"length2":175}]],"length":696,"saved":false}
{"ts":1377631711920,"patch":[[{"diffs":[[0,"        "],[-1,"point"],[1,"link"],[0,"s = []\n "]],"start1":273,"start2":273,"length1":21,"length2":20},{"diffs":[[0,"            "],[1,"#"],[0,"puts link\n  "]],"start1":529,"start2":529,"length1":24,"length2":25},{"diffs":[[0,"ts link\n"],[1,"                links push link\n"],[0,"        "]],"start1":544,"start2":544,"length1":16,"length2":48}]],"length":728,"saved":false}
{"ts":1377631730573,"patch":[[{"diffs":[[0,"   links"],[-1," "],[1,"."],[0,"push lin"]],"start1":565,"start2":565,"length1":17,"length2":17},{"diffs":[[0,"        "],[-1,"point"],[1,"link"],[0,"s\n   end"]],"start1":612,"start2":612,"length1":21,"length2":20}]],"length":727,"saved":false}
{"ts":1377631740418,"patch":[[{"diffs":[[0,"   links"],[1,".uniq"],[0,"\n   end\n"]],"start1":617,"start2":617,"length1":16,"length2":21}]],"length":732,"saved":false}
{"ts":1377632337100,"patch":[[{"diffs":[[0,"s.pu"],[-1,"s"],[0,"h"],[1," {"],[0," link"],[1,": link, name:  link.split('/').last }"],[0,"\n   "]],"start1":572,"start2":572,"length1":15,"length2":53}]],"length":770,"saved":false}
{"ts":1377632371642,"patch":[[{"diffs":[[0,"h { "],[1,":"],[0,"link"],[-1,":"],[1," =>"],[0," link, "],[1,":"],[0,"name"],[-1,":"],[1," =>"],[0,"  li"]],"start1":576,"start2":576,"length1":25,"length2":31}]],"length":776,"saved":false}
{"ts":1377632377964,"patch":[[{"diffs":[[0,":name =>"],[-1," "],[0," link.sp"]],"start1":595,"start2":595,"length1":17,"length2":16}]],"length":775,"saved":false}
{"ts":1377632388351,"patch":[[{"diffs":[[0,"links.pu"],[1,"s"],[0,"h { :lin"]],"start1":568,"start2":568,"length1":16,"length2":17}]],"length":776,"saved":false}
{"ts":1377632422951,"patch":[[{"diffs":[[0,"h { "],[-1,":"],[1,"'"],[0,"link"],[1,"'"],[0," => "]],"start1":577,"start2":577,"length1":13,"length2":14},{"diffs":[[0,"nk, "],[-1,":"],[1,"'"],[0,"name"],[1,"'"],[0," => "]],"start1":593,"start2":593,"length1":13,"length2":14}]],"length":778,"saved":false}
{"ts":1377632431976,"patch":[[{"diffs":[[0,"h { "],[-1,"'"],[1,":"],[0,"link"],[-1,"'"],[0," => "]],"start1":577,"start2":577,"length1":14,"length2":13},{"diffs":[[0,"nk, "],[-1,"'"],[1,":"],[0,"name"],[-1,"'"],[0," => "]],"start1":592,"start2":592,"length1":14,"length2":13}]],"length":776,"saved":false}
{"ts":1377632444437,"patch":[[{"diffs":[[0,"nks.push"],[-1," "],[1,"("],[0,"{ :link "]],"start1":570,"start2":570,"length1":17,"length2":17},{"diffs":[[0,").last }"],[1,")"],[0,"\n       "]],"start1":619,"start2":619,"length1":16,"length2":17}]],"length":777,"saved":false}
{"ts":1377632574316,"patch":[[{"diffs":[[0,"push"],[-1,"({ :link => link, :name => link.split('/').last })"],[1," link"],[0,"\n   "]],"start1":574,"start2":574,"length1":58,"length2":13}]],"length":732,"saved":false}
{"ts":1377632617544,"patch":[[{"diffs":[[0,"  \nend\n\n"],[1,"class PointGeocodeScraper\n     \n    def initialize(url)    \n        @doc = Nokogiri::HTML(open(url))\n    end\n    \n    def crawl\n        links = []\n        reg = Regexp.new(/javascript: PopUp\\(\\'(?<link>.*)/)\n        @doc.css('a').each do |a|\n            if reg.match(a['href']) then\n                link = a['href'].gsub(reg,'\\k<link>')\n                link = link.split('\\'')[0]\n                #puts link\n                links.push link\n            end\n        end\n        links.uniq\n   end\n   \nend\n\n"],[0,"points ="]],"start1":639,"start2":639,"length1":16,"length2":518}]],"length":1234,"saved":false}
