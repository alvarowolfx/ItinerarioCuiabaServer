{"ts":1377629858214,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"require 'wombat'\nrequire 'nokogiri'\nrequire 'open-uri'\nrequire 'json'\n\nclass BussScraper\n    include Wombat::Crawler\n    \n    base_url \"http://www.cuiaba.mt.gov.br\"\n    path \"/itinerario\"\n  \n    linhas 'css=#pesquisa>select>option', :list\n    \n    def crawl\n        resposta = super\n        onibus = []\n        for text in resposta['linhas'] do\n            text = text.split('-')\n            if(text.count >= 2)\n                onibus.push({ linha: text[0].strip, nome: text[1].strip})        \n            end\n        end\n        onibus\n    end\nend\n\nclass BussItineraryScraper\n     \n    def initialize(line = '031')    \n        @base_url = \"http://www.cuiaba.mt.gov.br\"\n        @doc = Nokogiri::HTML(open(\"#{@base_url}/itinerario?linha=#{line}\"))\n        @doc.css('br').each{ |br| br.replace(\"\\n\") }\n        #@doc.xpath('//*[@id=\"volta\"]/div[2]').remove\n    end\n    \n    def crawl\n        idas = []\n        voltas = []\n        return { ida: [], volta: [] }  if(@doc.at('#ida') == nil || @doc.at('#volta') == nil)   \n        \n        idas = parseItinerary('#ida')\n        voltas = parseItinerary('#volta')\n        resposta = { ida: idas, volta: voltas}\n        #puts resposta\n        resposta\n   end\n   \n   def parseItinerary(id)\n     paths = []\n     content = @doc.at(id).content\n     content = content.gsub(/\\r/,'')\n     content.split(/\\n/).each do |path|\n       next if path.upcase == path\n       path = path.gsub(/(EM OPERA.*)/,'')  \n       path = path.gsub(/(Obs\\..*)/,'')  \n       path = path.gsub(/(OBSERVA.*)/,'')  \n       path = path.gsub(/(desde.*)/,'')  \n       path = path.gsub(/(a partir.*)/,'')  \n       path = path.gsub(/\\A\\(|\\)\\Z/,'') if path.start_with?('(')\n       path = path.strip\n       paths.push path if !path.empty?\n     end\n     paths          \n   end\nend\n\nonibus = BussScraper.new.crawl\n\nfor buss in onibus do\n    puts \"Getting itineray for line #{buss[:linha]}\"    \n    scraper = BussItineraryScraper.new(buss[:linha])\n    buss[:itinerario] = scraper.crawl\nend\n\nFile.open(\"temp.json\",\"w\") do |f|\n  f.write(onibus.to_json)\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":2052}]],"length":2052}
